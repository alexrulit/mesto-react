{"version":3,"sources":["components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","Logo","alt","api","options","this","_baseUrl","baseUrl","_token","headers","authorization","_contentType","contentType","endpoint","method","body","_headers","_requestInit","fetch","then","res","ok","json","Promise","reject","status","_sendRequest","name","about","_body","JSON","stringify","link","cardId","state","_cardId","_method","avatarLink","avatar","Card","props","card","onClick","onCardClick","type","likes","length","Main","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","React","useEffect","all","getUserInfo","getInitialCards","result","data","catch","err","console","log","onEditAvatar","onEditProfile","onAddPlace","map","item","index","key","Footer","PopupWithForm","isOpen","action","noValidate","title","children","onClose","ImagePopup","hasOwnProperty","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","id","minLength","maxLength","required","pattern","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"gNAWeA,MARf,WACI,OACA,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,eAAeC,IAAKC,IAAMC,IAAI,qC,cCyElCC,EARH,I,WAtEV,WAAYC,GAAS,oBACnBC,KAAKC,SAAWF,EAAQG,QACxBF,KAAKG,OAASJ,EAAQK,QAAQC,cAC9BL,KAAKM,aAAeP,EAAQK,QAAQG,Y,yDAGzBC,EAAUC,EAAQC,GAY7B,OAXAV,KAAKW,SAAW,CACZN,cAAeL,KAAKG,OACpB,eAAgBH,KAAKM,cAEzBN,KAAKY,aAAe,CAClBH,OAAQA,EACRL,QAASJ,KAAKW,UAEF,SAAXF,GAAgC,UAAXA,IACtBT,KAAKY,aAAaF,KAAOA,GAEpBG,MAAM,GAAD,OAAIb,KAAKC,UAAT,OAAoBO,GAAYR,KAAKY,cAChDE,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,oCAKvC,OAAOpB,KAAKqB,aAAa,YAAa,MAAO,M,wCAI7C,OAAOrB,KAAKqB,aAAa,SAAU,MAAO,M,kCAGhCC,EAAMC,GAKhB,OAJAvB,KAAKwB,MAAQC,KAAKC,UAAU,CACxBJ,KAAMA,EACNC,MAAOA,IAEJvB,KAAKqB,aAAa,YAAa,QAASrB,KAAKwB,S,iCAG3CF,EAAMK,GAKf,OAJA3B,KAAKwB,MAAQC,KAAKC,UAAU,CACxBJ,KAAMA,EACNK,KAAMA,IAEH3B,KAAKqB,aAAa,SAAU,OAAQrB,KAAKwB,S,+BAGzCI,EAAQC,GAGf,OAFA7B,KAAK8B,QAAUF,EACf5B,KAAK+B,QAAWF,EAAQ,SAAW,MAC5B7B,KAAKqB,aAAa,gBAAkBrB,KAAK8B,QAAS9B,KAAK+B,QAAS,M,iCAG9DH,GAET,OADA5B,KAAK8B,QAAUF,EACR5B,KAAKqB,aAAa,UAAYrB,KAAK8B,QAAS,SAAU,M,gCAGrDE,GAIR,OAHAhC,KAAKwB,MAAQC,KAAKC,UAAU,CACxBO,OAAQD,IAELhC,KAAKqB,aAAa,mBAAoB,QAASrB,KAAKwB,W,KAInD,CAAQ,CAClBtB,QAAS,8CACTE,QAAS,CACPC,cAAe,uCACfE,YAAa,sBCpDJ2B,MArBf,SAAcC,GAMV,OACI,wBAAIzC,UAAU,kBACZ,yBAAKA,UAAU,kBAAkBC,IAAKwC,EAAMC,KAAKT,KAAM9B,IAAKsC,EAAMC,KAAKd,KAAMe,QANnF,WACIF,EAAMG,YAAYH,EAAMC,SAMtB,yBAAK1C,UAAU,yBACb,uBAAGA,UAAU,kBAAkByC,EAAMC,KAAKd,MAC1C,yBAAK5B,UAAU,kBACb,4BAAQ6C,KAAK,SAAS7C,UAAU,0BAChC,uBAAGA,UAAU,wBAAwByC,EAAMC,KAAKI,MAAMC,UAG1D,4BAAQF,KAAK,SAAS7C,UAAU,8BCkC3BgD,MAhDf,SAAcP,GAAQ,IAAD,EAEaQ,mBAAS,IAFtB,mBAEZC,EAFY,KAEFC,EAFE,OAG2BF,mBAAS,IAHpC,mBAGZG,EAHY,KAGKC,EAHL,OAIiBJ,mBAAS,IAJ1B,mBAIZK,EAJY,KAIAC,EAJA,OAKON,mBAAS,IALhB,mBAKZO,EALY,KAKLC,EALK,KAoBjB,OAbFC,IAAMC,WAAU,WACdnC,QAAQoC,IAAI,CAACxD,EAAIyD,cAAezD,EAAI0D,oBACjC1C,MAAK,YAAqB,IAAD,mBAAlB2C,EAAkB,KAAVC,EAAU,KACxBb,EAAYY,EAAOnC,MACnByB,EAAmBU,EAAOlC,OAC1B0B,EAAcQ,EAAOxB,QACrBkB,EAASO,MAEVC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAGC,0BAAMlE,UAAU,QACd,6BAASA,UAAU,WACjB,yBAAKA,UAAU,uBAAuB2C,QAASF,EAAM4B,cACnD,yBAAKrE,UAAU,kBAAkBC,IAAKqD,EAAYnD,IAAI,0CAExD,yBAAKH,UAAU,iBACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,kBAAkBkD,GAChC,uBAAGlD,UAAU,qBAAqBoD,IAEpC,4BAAQP,KAAK,SAAS7C,UAAU,uBAAuB2C,QAASF,EAAM6B,iBAExE,4BAAQzB,KAAK,SAAS7C,UAAU,sBAAsB2C,QAASF,EAAM8B,cAEvE,6BAASvE,UAAU,YACjB,wBAAIA,UAAU,kBACbwD,EAAMgB,KAAI,SAACC,EAAMC,GAChB,OACE,kBAAC,EAAD,CAAMhC,KAAM+B,EAAME,IAAKD,EAAO9B,YAAaH,EAAMG,qBCjChDgC,MARf,WACI,OACA,4BAAQ5E,UAAU,UAChB,uBAAGA,UAAU,qBAAb,4BCUS6E,MAbf,SAAuBpC,GACnB,OACA,yBAAKzC,UAAS,2BAAsByC,EAAMb,KAA5B,YAAoCa,EAAMqC,OAAS,eAAiB,KAChF,0BAAMlD,KAAMa,EAAMb,KAAMmD,OAAO,IAAI/E,UAAU,mBAAmBgF,YAAU,GACxE,wBAAIhF,UAAU,gBAAgByC,EAAMwC,OACnCxC,EAAMyC,SACP,4BAAQrC,KAAK,SAAS7C,UAAU,iBAAhC,0DACA,4BAAQ6C,KAAK,SAAS7C,UAAU,eAAe2C,QAASF,EAAM0C,aCKvDC,MAZf,SAAoB3C,GAChB,OACA,yBAAKzC,UAAS,iCAA4ByC,EAAMC,KAAK2C,eAAe,QAAU,eAAiB,KAC7F,4BAAQrF,UAAU,iBAChB,yBAAKC,IAAKwC,EAAMC,KAAKT,KAAMjC,UAAU,aAAaG,IAAKsC,EAAMC,KAAKd,OAClE,gCAAY5B,UAAU,qBAAqByC,EAAMC,KAAKd,MACtD,4BAAQiB,KAAK,SAAS7C,UAAU,eAAe2C,QAASF,EAAM0C,aCsDvDG,MAvDf,WAAgB,IAAD,EAC+CrC,oBAAS,GADxD,mBACNsC,EADM,KACkBC,EADlB,OAEyCvC,oBAAS,GAFlD,mBAENwC,EAFM,KAEeC,EAFf,OAG6CzC,oBAAS,GAHtD,mBAGN0C,EAHM,KAGiBC,EAHjB,OAI2B3C,mBAAS,IAJpC,mBAIN4C,EAJM,KAIQC,EAJR,KAsBb,SAASC,IACPH,GAAyB,GACzBJ,GAA0B,GAC1BE,GAAuB,GACvBI,EAAgB,IAGlB,OACE,yBAAK9F,UAAU,QACf,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAMsE,cAlBR,WACEkB,GAA0B,IAiBmBjB,WAd/C,WACEmB,GAAuB,IAauDrB,aAtBhF,WACEuB,GAAyB,IAqB0FhD,YA1BrH,SAAyBF,GACvBoD,EAAgBpD,MA0BhB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAed,KAAK,UAAUqD,MAAM,4HAAwBH,OAAQS,EAAwBJ,QAASY,GACnG,2BAAOC,GAAG,cAAcpE,KAAK,cAAciB,KAAK,OAAO7C,UAAU,eAAeiG,UAAU,IAAIC,UAAU,KAAKC,UAAQ,EAACC,QAAQ,6CAC9H,0BAAMJ,GAAG,oBAAoBhG,UAAU,uBACvC,2BAAOgG,GAAG,YAAYpE,KAAK,YAAYiB,KAAK,OAAO7C,UAAU,eAAeiG,UAAU,IAAIC,UAAU,MAAMC,UAAQ,IAClH,0BAAMH,GAAG,kBAAkBhG,UAAU,wBAEvC,kBAAC,EAAD,CAAe4B,KAAK,UAAUqD,MAAM,gEAAcH,OAAQW,EAAqBN,QAASY,GACtF,2BAAOC,GAAG,YAAYpE,KAAK,OAAOiB,KAAK,OAAO7C,UAAU,eAAeqG,YAAY,mDAAWJ,UAAU,IAAIC,UAAU,KAAKC,UAAQ,IACnI,0BAAMH,GAAG,kBAAkBhG,UAAU,uBACrC,2BAAOgG,GAAG,YAAYpE,KAAK,OAAOiB,KAAK,MAAM7C,UAAU,eAAeqG,YAAY,qGAAqBF,UAAQ,IAC/G,0BAAMH,GAAG,kBAAkBhG,UAAU,wBAEvC,kBAAC,EAAD,CAAe4B,KAAK,SAASqD,MAAM,wFAAkBH,OAAQa,EAAuBR,QAASY,GAC3F,2BAAOC,GAAG,cAAcpE,KAAK,aAAaiB,KAAK,MAAM7C,UAAU,eAAeqG,YAAY,qGAAqBF,UAAQ,IACvH,0BAAMH,GAAG,oBAAoBhG,UAAU,wBAEzC,kBAAC,EAAD,CAAY0C,KAAMmD,EAAcV,QAASY,MC7CzBO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9F,MAAK,SAAA+F,GACJA,EAAaC,gBAEdnD,OAAM,SAAAoD,GACLlD,QAAQkD,MAAMA,EAAMC,a,kBEzI5BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.06ce2929.chunk.js","sourcesContent":["import React from 'react';\nimport Logo from '../images/logo.svg';\n\nfunction Header() {\n    return(\n    <header className=\"header\">\n      <img className=\"header__logo\" src={Logo} alt=\"Место\" />\n    </header>\n    );\n}\n\nexport default Header;","class Api {\n    constructor(options){\n      this._baseUrl = options.baseUrl;\n      this._token = options.headers.authorization;\n      this._contentType = options.headers.contentType;\n    }\n  \n    _sendRequest(endpoint, method, body){\n      this._headers = {\n          authorization: this._token,\n          'Content-type': this._contentType\n      };\n      this._requestInit = {\n        method: method,\n        headers: this._headers\n      };\n      if(method === 'POST' || method === 'PATCH'){\n        this._requestInit.body = body;\n      }\n      return fetch(`${this._baseUrl}${endpoint}`, this._requestInit)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n    }\n  \n    getUserInfo() {\n      return this._sendRequest('/users/me', 'GET', {});\n    }\n  \n    getInitialCards() {\n      return this._sendRequest('/cards', 'GET', {});\n    }\n  \n    setUserInfo(name, about) {\n      this._body = JSON.stringify({\n          name: name,\n          about: about\n      });\n      return this._sendRequest('/users/me', 'PATCH', this._body);\n    }\n  \n    addNewCard(name, link) {\n      this._body = JSON.stringify({\n          name: name,\n          link: link\n      });\n      return this._sendRequest('/cards', 'POST', this._body);\n    }\n  \n    cardLike(cardId, state) {\n      this._cardId = cardId;\n      this._method =  state ? 'DELETE' : 'PUT';\n      return this._sendRequest('/cards/likes/' + this._cardId, this._method, {});\n    }\n  \n    deleteCard(cardId) {\n      this._cardId = cardId;\n      return this._sendRequest('/cards/' + this._cardId, 'DELETE', {});\n    }\n  \n    setAvatar(avatarLink) {\n      this._body = JSON.stringify({\n          avatar: avatarLink\n      });\n      return this._sendRequest('/users/me/avatar', 'PATCH', this._body);\n    }\n  }\n  \n  const api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n    headers: {\n      authorization: '67d49140-f28d-4665-8757-80e700844f4c',\n      contentType: 'application/json'\n    }\n  });\n\n  export default api;","import React from 'react';\n\nfunction Card(props) {\n\n    function handleClick() {\n        props.onCardClick(props.card);\n    } \n\n    return(\n        <li className=\"elements__item\">\n          <img className=\"elements__image\" src={props.card.link} alt={props.card.name} onClick={handleClick} />\n          <div className=\"elements__description\">\n            <p className=\"elements__text\">{props.card.name}</p>\n            <div className=\"elements__like\">\n              <button type=\"button\" className=\"elements__like-button\" />\n              <p className=\"elements__like-count\">{props.card.likes.length}</p>\n            </div>\n          </div>\n          <button type=\"button\" className=\"elements__delete-button\" />\n        </li>\n    );\n}\n\nexport default Card;","import React, { useState } from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\n\nfunction Main(props) {\n\n  const [userName, setUserName] = useState('');\n  const [userDescription, setUserDescription] = useState('');\n  const [userAvatar, setUserAvatar] = useState('');\n  const [cards, setCards] = useState([]);\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([result, data]) => {\n        setUserName(result.name);\n        setUserDescription(result.about);\n        setUserAvatar(result.avatar);\n        setCards(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n    return(\n      <main className=\"main\">\n        <section className=\"profile\">\n          <div className=\"profile__avatar-link\" onClick={props.onEditAvatar}>\n            <img className=\"profile__avatar\" src={userAvatar} alt=\"Аватар\" />\n          </div>\n          <div className=\"profile__info\">\n            <div className=\"profile__author\">\n              <h1 className=\"profile__title\">{userName}</h1>\n              <p className=\"profile__subtitle\">{userDescription}</p>\n            </div>\n            <button type=\"button\" className=\"profile__edit-button\" onClick={props.onEditProfile} />\n          </div>\n          <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace} />\n        </section>\n        <section className=\"elements\">\n          <ul className=\"elements__list\">\n          {cards.map((item, index) => {\n            return (\n              <Card card={item} key={index} onCardClick={props.onCardClick} />\n            );\n          })}\n          </ul>\n        </section>\n      </main>\n    );\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n    return(\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n    );\n}\n\nexport default Footer;","import React, { Children } from 'react';\n\nfunction PopupWithForm(props) {\n    return(    \n    <div className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\n      <form name={props.name} action=\"#\" className=\"popup__container\" noValidate>\n        <h2 className=\"popup__title\">{props.title}</h2>\n        {props.children}\n        <button type=\"submit\" className=\"popup__submit\">Сохранить</button>\n        <button type=\"button\" className=\"popup__close\" onClick={props.onClose} />\n      </form>\n    </div>\n    );\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nfunction ImagePopup(props) {\n    return(\n    <div className={`popup popup_type_image ${props.card.hasOwnProperty('name') ? 'popup_opened' : ''}`}>\n      <figure className=\"popup__figure\">\n        <img src={props.card.link} className=\"popup__img\" alt={props.card.name} />\n        <figcaption className=\"popup__figcaption\">{props.card.name}</figcaption>\n        <button type=\"button\" className=\"popup__close\" onClick={props.onClose}/>\n      </figure>\n    </div>\n    );\n}\n\nexport default ImagePopup;","import React, { useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  \n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  \n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  return (\n    <div className=\"page\">\n    <Header />\n    <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} />\n    <Footer />\n    <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\n      <input id=\"popupAuthor\" name=\"popupAuthor\" type=\"text\" className=\"popup__input\" minLength=\"2\" maxLength=\"40\" required pattern=\"[А-Яа-яA-Za-z -]{1,}\" />\n      <span id=\"popupAuthor-error\" className=\"popup__input-error\"></span>\n      <input id=\"popupDesc\" name=\"popupDesc\" type=\"text\" className=\"popup__input\" minLength=\"2\" maxLength=\"200\" required />\n      <span id=\"popupDesc-error\" className=\"popup__input-error\"></span>\n    </PopupWithForm>\n    <PopupWithForm name=\"addcard\" title=\"Новое место\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n      <input id=\"popupName\" name=\"name\" type=\"text\" className=\"popup__input\" placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" required />\n      <span id=\"popupName-error\" className=\"popup__input-error\"></span>\n      <input id=\"popupLink\" name=\"link\" type=\"url\" className=\"popup__input\" placeholder=\"Ссылка на картинку\" required />\n      <span id=\"popupLink-error\" className=\"popup__input-error\"></span>\n    </PopupWithForm>\n    <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n      <input id=\"popupAvatar\" name=\"avatarLink\" type=\"url\" className=\"popup__input\" placeholder=\"Ссылка на картинку\" required />\n      <span id=\"popupAvatar-error\" className=\"popup__input-error\"></span>\n    </PopupWithForm>\n    <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.2b1f7ee5.svg\";"],"sourceRoot":""}